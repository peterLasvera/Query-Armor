1. Check All Database Size
2. Create Role Read Only and Read Write
3. Check Hostname
4. Check Streaming Replication Lagging (in Second)
5. Remote Backup Restore with compressed
6. Find Locked Table and Kill pid

------------------1. Check All Database Size-------------------
SELECT pg_database.datname as "database_name", pg_database_size(pg_database.datname)/1024/1024 AS size_in_mb FROM pg_database ORDER by size_in_mb DESC;

------------------2. Create Role Read Only and Read Write-------------------
-- Making sure roles can't do anything on the database without explicit grant
REVOKE CREATE ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON DATABASE my_database FROM PUBLIC;
CREATE SCHEMA my_schema;

-- Read-write
CREATE ROLE read_write;

GRANT CONNECT ON DATABASE my_database TO read_write;
GRANT USAGE, CREATE ON SCHEMA my_schema TO read_write;

GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA my_schema TO read_write;
ALTER DEFAULT PRIVILEGES IN SCHEMA my_schema GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO read_write;

GRANT USAGE ON ALL SEQUENCES IN SCHEMA my_schema TO read_write;
ALTER DEFAULT PRIVILEGES IN SCHEMA my_schema GRANT USAGE ON SEQUENCES TO read_write;

-- Read-only
CREATE ROLE read_only;

GRANT CONNECT ON DATABASE my_database TO read_only;
GRANT USAGE ON SCHEMA my_schema TO read_only;

GRANT SELECT ON ALL TABLES IN SCHEMA my_schema TO read_only;
ALTER DEFAULT PRIVILEGES IN SCHEMA my_schema GRANT SELECT ON TABLES TO read_only;

-- Users
CREATE USER read_write_user WITH PASSWORD 'password_1';
GRANT read_write TO my_database;

CREATE USER read_only_user WITH PASSWORD 'password_2';
GRANT read_only TO my_database_read_only;

------------------3. Check Hostname-------------------
select pg_read_file('/etc/hostname') as hostname;

------------------4. Check Streaming Replication Lagging (in Second)-------------------
SELECT pg_is_in_recovery() AS is_slave, pg_last_wal_receive_lsn() AS receive, pg_last_wal_replay_lsn() AS replay, 
pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() AS synced,EXTRACT(SECONDS FROM now() - pg_last_xact_replay_timestamp())::float AS lag;

------------------5. Remote Backup Restore with compressed-----------------------------
pg_dump -C dbname | ssh -C remoteuser@remotehost "psql dbname"

------------------6. Find Locked Table and Kill pid-----------------------
SELECT 'SELECT pg_terminate_backend('||pid||');'
  FROM pg_locks l
  JOIN pg_class t ON l.relation = t.oid AND t.relkind = 'r' and relname='mst_setting_simpanan_sya'
